{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gotre/projects/lupita/components/UiFileInputButton.js\";\nimport { useRef } from 'react';\nexport const UiFileInputButton = props => {\n  const fileInputRef = useRef(null);\n  const formRef = useRef(null);\n\n  const onClickHandler = () => {\n    var _fileInputRef$current;\n\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n\n  const onChangeHandler = event => {\n    var _event$target$files, _formRef$current;\n\n    if (!((_event$target$files = event.target.files) !== null && _event$target$files !== void 0 && _event$target$files.length)) {\n      return;\n    }\n\n    const formData = new FormData();\n    Array.from(event.target.files).forEach(file => {\n      formData.append(event.target.name, file);\n    });\n    props.onChange(formData);\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClickHandler,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: props.acceptedFileTypes,\n      multiple: props.allowMultipleFiles,\n      name: props.uploadFileName,\n      onChange: onChangeHandler,\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\nUiFileInputButton.defaultProps = {\n  acceptedFileTypes: '',\n  allowMultipleFiles: false\n};","map":{"version":3,"sources":["/Users/gotre/projects/lupita/components/UiFileInputButton.js"],"names":["useRef","UiFileInputButton","props","fileInputRef","formRef","onClickHandler","current","click","onChangeHandler","event","target","files","length","formData","FormData","Array","from","forEach","file","append","name","onChange","reset","label","acceptedFileTypes","allowMultipleFiles","uploadFileName","display","defaultProps"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,OAAvB;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACxC,QAAMC,YAAY,GAAGH,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMI,OAAO,GAAGJ,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAMK,cAAc,GAAG,MAAM;AAAA;;AACzB,6BAAAF,YAAY,CAACG,OAAb,gFAAsBC,KAAtB;AACH,GAFD;;AAIA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAI,yBAACA,KAAK,CAACC,MAAN,CAAaC,KAAd,gDAAC,oBAAoBC,MAArB,CAAJ,EAAiC;AAC7B;AACH;;AAED,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAC,IAAAA,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACC,MAAN,CAAaC,KAAxB,EAA+BM,OAA/B,CAAwCC,IAAD,IAAU;AAC7CL,MAAAA,QAAQ,CAACM,MAAT,CAAgBV,KAAK,CAACC,MAAN,CAAaU,IAA7B,EAAmCF,IAAnC;AACH,KAFD;AAIAhB,IAAAA,KAAK,CAACmB,QAAN,CAAeR,QAAf;AAEA,wBAAAT,OAAO,CAACE,OAAR,sEAAiBgB,KAAjB;AACH,GAdD;;AAgBA,sBACI;AAAM,IAAA,GAAG,EAAElB,OAAX;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,cAA/B;AAAA,gBACKH,KAAK,CAACqB;AADX;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,MAAA,MAAM,EAAErB,KAAK,CAACsB,iBADlB;AAEI,MAAA,QAAQ,EAAEtB,KAAK,CAACuB,kBAFpB;AAGI,MAAA,IAAI,EAAEvB,KAAK,CAACwB,cAHhB;AAII,MAAA,QAAQ,EAAElB,eAJd;AAKI,MAAA,GAAG,EAAEL,YALT;AAMI,MAAA,KAAK,EAAE;AAAEwB,QAAAA,OAAO,EAAE;AAAX,OANX;AAOI,MAAA,IAAI,EAAC;AAPT;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxCM;AA0CP1B,iBAAiB,CAAC2B,YAAlB,GAAiC;AAC7BJ,EAAAA,iBAAiB,EAAE,EADU;AAE7BC,EAAAA,kBAAkB,EAAE;AAFS,CAAjC","sourcesContent":["import { useRef } from 'react';\n\n\nexport const UiFileInputButton = (props) => {\n    const fileInputRef = useRef(null);\n    const formRef = useRef(null);\n\n    const onClickHandler = () => {\n        fileInputRef.current?.click();\n    };\n\n    const onChangeHandler = (event) => {\n        if (!event.target.files?.length) {\n            return;\n        }\n\n        const formData = new FormData();\n\n        Array.from(event.target.files).forEach((file) => {\n            formData.append(event.target.name, file);\n        });\n\n        props.onChange(formData);\n\n        formRef.current?.reset();\n    };\n\n    return (\n        <form ref={formRef}>\n            <button type=\"button\" onClick={onClickHandler}>\n                {props.label}\n            </button>\n            <input\n                accept={props.acceptedFileTypes}\n                multiple={props.allowMultipleFiles}\n                name={props.uploadFileName}\n                onChange={onChangeHandler}\n                ref={fileInputRef}\n                style={{ display: 'none' }}\n                type=\"file\"\n            />\n        </form>\n    );\n};\n\nUiFileInputButton.defaultProps = {\n    acceptedFileTypes: '',\n    allowMultipleFiles: false,\n};\n"]},"metadata":{},"sourceType":"module"}